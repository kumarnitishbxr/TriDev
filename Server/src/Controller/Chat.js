const axios = require('axios')


const Chat = async ()=>{

    const data = await axios('https://sih-prototype-xbeq.onrender.com/')
    console.log(data)
    
}


Chat()



//const obj = {
//   status: 200,
//   statusText: 'OK',
//   headers: Object [AxiosHeaders] {
//     date: 'Sun, 07 Sep 2025 16:58:47 GMT',
//     'content-type': 'application/json',
//     'content-length': '64',
//     connection: 'keep-alive',
//     'rndr-id': 'ba38ab03-7e4a-4357',
//     vary: 'Accept-Encoding',
//     'x-render-origin-server': 'uvicorn',
//     'cf-cache-status': 'DYNAMIC',
//     server: 'cloudflare',
//     'cf-ray': '97b7c0bcfbb13b3a-BOM',
//     'alt-svc': 'h3=":443"; ma=86400'
//   },
//   config: {
//     transitional: {
//       silentJSONParsing: true,
//       forcedJSONParsing: true,
//       clarifyTimeoutError: false
//     },
//     adapter: [ 'xhr', 'http', 'fetch' ],
//     transformRequest: [ [Function: transformRequest] ],
//     transformResponse: [ [Function: transformResponse] ],
//     timeout: 0,
//     xsrfCookieName: 'XSRF-TOKEN',
//     xsrfHeaderName: 'X-XSRF-TOKEN',
//     maxContentLength: -1,
//     maxBodyLength: -1,
//     env: { FormData: [Function [FormData]], Blob: [class Blob] },
//     validateStatus: [Function: validateStatus],
//     headers: Object [AxiosHeaders] {
//       Accept: 'application/json, text/plain, */*',
//       'Content-Type': undefined,
//       'User-Agent': 'axios/1.11.0',
//       'Accept-Encoding': 'gzip, compress, deflate, br'
//     },
//     url: 'https://sih-prototype-xbeq.onrender.com/',
//     allowAbsoluteUrls: true,
//     method: 'get',
//     data: undefined
//   },
//   request: <ref *1> ClientRequest {
//     _events: [Object: null prototype] {
//       abort: [Function (anonymous)],
//       aborted: [Function (anonymous)],
//       connect: [Function (anonymous)],
//       error: [Function (anonymous)],
//       socket: [Function (anonymous)],
//       timeout: [Function (anonymous)],
//       finish: [Function: requestOnFinish]
//     },
//     _eventsCount: 7,
//     _maxListeners: undefined,
//     outputData: [],
//     outputSize: 0,
//     writable: true,
//     destroyed: true,
//     _last: true,
//     chunkedEncoding: false,
//     shouldKeepAlive: true,
//     maxRequestsOnConnectionReached: false,
//     _defaultKeepAlive: true,
//     useChunkedEncodingByDefault: false,
//     sendDate: false,
//     _removedConnection: false,
//     _removedContLen: false,
//     _removedTE: false,
//     strictContentLength: false,
//     _contentLength: 0,
//     _hasBody: true,
//     _trailer: '',
//     finished: true,
//     _headerSent: true,
//     _closed: true,
//     _header: 'GET / HTTP/1.1\r\n' +
//       'Accept: application/json, text/plain, */*\r\n' +
//       'User-Agent: axios/1.11.0\r\n' +
//       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
//       'Host: sih-prototype-xbeq.onrender.com\r\n' +
//       'Connection: keep-alive\r\n' +
//       '\r\n',
//     _keepAliveTimeout: 0,
//     _onPendingData: [Function: nop],
//     agent: Agent {
//       _events: [Object: null prototype],
//       _eventsCount: 2,
//       _maxListeners: undefined,
//       defaultPort: 443,
//       protocol: 'https:',
//       options: [Object: null prototype],
//       requests: [Object: null prototype] {},
//       sockets: [Object: null prototype] {},
//       freeSockets: [Object: null prototype],
//       keepAliveMsecs: 1000,
//       keepAlive: true,
//       maxSockets: Infinity,
//       maxFreeSockets: 256,
//       scheduling: 'lifo',
//       maxTotalSockets: Infinity,
//       totalSocketCount: 1,
//       maxCachedSessions: 100,
//       _sessionCache: [Object],
//       [Symbol(shapeMode)]: false,
//       [Symbol(kCapture)]: false
//     },
//     socketPath: undefined,
//     method: 'GET',
//     maxHeaderSize: undefined,
//     insecureHTTPParser: undefined,
//     joinDuplicateHeaders: undefined,
//     path: '/',
//     _ended: true,
//     res: IncomingMessage {
//       _events: [Object],
//       _readableState: [ReadableState],
//       _maxListeners: undefined,
//       socket: null,
//       httpVersionMajor: 1,
//       httpVersionMinor: 1,
//       httpVersion: '1.1',
//       complete: true,
//       rawHeaders: [Array],
//       rawTrailers: [],
//       joinDuplicateHeaders: undefined,
//       aborted: false,
//       upgrade: false,
//       url: '',
//       method: null,
//       statusCode: 200,
//       statusMessage: 'OK',
//       client: [TLSSocket],
//       _consuming: false,
//       _dumped: false,
//       req: [Circular *1],
//       _eventsCount: 4,
//       responseUrl: 'https://sih-prototype-xbeq.onrender.com/',
//       redirects: [],
//       [Symbol(shapeMode)]: true,
//       [Symbol(kCapture)]: false,
//       [Symbol(kHeaders)]: [Object],
//       [Symbol(kHeadersCount)]: 24,
//       [Symbol(kTrailers)]: null,
//       [Symbol(kTrailersCount)]: 0
//     },
//     aborted: false,
//     timeoutCb: null,
//     upgradeOrConnect: false,
//     parser: null,
//     maxHeadersCount: null,
//     reusedSocket: false,
//     host: 'sih-prototype-xbeq.onrender.com',
//     protocol: 'https:',
//     _redirectable: Writable {
//       _events: [Object],
//       _writableState: [WritableState],
//       _maxListeners: undefined,
//       _options: [Object],
//       _ended: true,
//       _ending: true,
//       _redirectCount: 0,
//       _redirects: [],
//       _requestBodyLength: 0,
//       _requestBodyBuffers: [],
//       _eventsCount: 3,
//       _onNativeResponse: [Function (anonymous)],
//       _currentRequest: [Circular *1],
//       _currentUrl: 'https://sih-prototype-xbeq.onrender.com/',
//       [Symbol(shapeMode)]: true,
//       [Symbol(kCapture)]: false
//     },
//     [Symbol(shapeMode)]: false,
//     [Symbol(kCapture)]: false,
//     [Symbol(kBytesWritten)]: 0,
//     [Symbol(kNeedDrain)]: false,
//     [Symbol(corked)]: 0,
//     [Symbol(kChunkedBuffer)]: [],
//     [Symbol(kChunkedLength)]: 0,
//     [Symbol(kSocket)]: TLSSocket {
//       _tlsOptions: [Object],
//       _secureEstablished: true,
//       _securePending: false,
//       _newSessionPending: false,
//       _controlReleased: true,
//       secureConnecting: false,
//       _SNICallback: null,
//       servername: 'sih-prototype-xbeq.onrender.com',
//       alpnProtocol: false,
//       authorized: true,
//       authorizationError: null,
//       encrypted: true,
//       _events: [Object: null prototype],
//       _eventsCount: 9,
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: 'sih-prototype-xbeq.onrender.com',
//       _closeAfterHandlingError: false,
//       _readableState: [ReadableState],
//       _writableState: [WritableState],
//       allowHalfOpen: false,
//       _maxListeners: undefined,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: undefined,
//       _server: null,
//       ssl: null,
//       _requestCert: true,
//       _rejectUnauthorized: true,
//       timeout: 5000,
//       parser: null,
//       _httpMessage: null,
//       autoSelectFamilyAttemptedAddresses: [Array],
//       handle: [TLSWrap],
//       [Symbol(alpncallback)]: null,
//       [Symbol(res)]: [TLSWrap],
//       [Symbol(verified)]: true,
//       [Symbol(pendingSession)]: null,
//       [Symbol(async_id_symbol)]: -1,
//       [Symbol(kHandle)]: [TLSWrap],
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: Timeout {
//         _idleTimeout: 5000,
//         _idlePrev: [TimersList],
//         _idleNext: [TimersList],
//         _idleStart: 1397,
//         _onTimeout: [Function: bound ],
//         _timerArgs: undefined,
//         _repeat: null,
//         _destroyed: false,
//         [Symbol(refed)]: false,
//         [Symbol(kHasPrimitive)]: false,
//         [Symbol(asyncId)]: 30,
//         [Symbol(triggerId)]: 28,
//         [Symbol(kAsyncContextFrame)]: undefined
//       },
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(shapeMode)]: true,
//       [Symbol(kCapture)]: false,
//       [Symbol(kSetNoDelay)]: false,
//       [Symbol(kSetKeepAlive)]: true,
//       [Symbol(kSetKeepAliveInitialDelay)]: 1,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0,
//       [Symbol(connect-options)]: [Object]
//     },
//     [Symbol(kOutHeaders)]: [Object: null prototype] {
//       accept: [Array],
//       'user-agent': [Array],
//       'accept-encoding': [Array],
//       host: [Array]
//     },
//     [Symbol(errored)]: null,
//     [Symbol(kHighWaterMark)]: 16384,
//     [Symbol(kRejectNonStandardBodyWrites)]: false,
//     [Symbol(kUniqueHeaders)]: null
//   },
//   data: {
//     message: 'Upload documents via /upload and ask questions via /chat.'
//   }
// }